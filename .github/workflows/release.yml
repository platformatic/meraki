name: release

on:
  workflow_dispatch:
    inputs:
      versionType:
        type: choice
        description: 'The type of release to create'
        required: true
        options:
          - 'patch'
          - 'minor'
          - 'major'

jobs:
  run-test:
    name: Run Tests
    uses: platformatic/meraki/.github/workflows/test.yml@main

  prepare-release:
    name: Prepare release tag 
    needs: run-test
    runs-on: ubuntu-latest
    outputs:
      TAG: v${{ steps.tag-name.outputs.TAG }}
    steps: 
    - name: Checkout
      uses: actions/checkout@v4
    - id: version-bump 
      name:  'Automated Version Bump'
      uses:  'phips28/gh-action-bump-version@master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        version-type:  ${{ github.event.inputs.versionType }}
        tag-prefix:  'v'
    - name: Export TAG Parameter
      id: tag-name
      run: |
        echo "TAG=`cat package.json | jq -r .version`" >> $GITHUB_OUTPUT
      shell: bash

  create-draft:
    needs: prepare-release
    # TODO: restore `main` for the branch
    name: Create Draft Release
    uses: platformatic/meraki/.github/workflows/release-draft.yml@release-gh
    with:
      tag_name: ${{ needs.prepare-release.outputs.TAG }}
    secrets: inherit

  release:
    name: Release 
    needs: create-draft
    runs-on: ubuntu-latest
    steps:  
    - name: Get last Draft
      id: last_release
      uses: InsonusK/get-latest-release@v1.0.1 # https://github.com/InsonusK/get-latest-release
      with:
        myToken: ${{ secrets.GITHUB_TOKEN }}
        exclude_types: "release|prerelease"
        view_top: 1

    - name: "Print draft info"
      run: |
          echo "Releasing:"
          echo "id: ${{ steps.last_release.outputs.id }}"
          echo "name: ${{ steps.last_release.outputs.name }}"
          echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
          echo "created_at: ${{ steps.last_release.outputs.created_atd }}"

    - name: "Publish Release"
      uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.last_release.outputs.id }}

